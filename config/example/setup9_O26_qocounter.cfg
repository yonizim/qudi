#  Yaniv Yirmiyahu QuDi configuration file for charge state measurements
#
#
#
# IMPORTANT: The format of every 'module.Class' line has changed on 28.6.2015.
# =========  The class name now needs to be explicitly given here in the config.
#		  the config line must the form package.module.Class.ClassName
global:
    # list of modules to load when starting
    startup: ['man', 'tray']

    # Devices are defined in another config file:
    #hardware: readConfigFile('devices.cfg')
    remoteport: 12345

    ## For controlling the appearance of the GUI:
    stylesheet: 'qdark.qss'

hardware:

    microwave:
        module.Class: 'microwave.mw_source_agilent_new.MicrowaveAgilent'
        gpib_address: 'GPIB0::19::INSTR'
        gpib_timeout: 3


    fastcounter:
       module.Class: 'swabian_instruments.timetagger_fast_counter.TimeTaggerFastCounter'
       fpgacounter_serial: '1634000FTS'
       timetagger_channel_apd_0: 0
       timetagger_channel_apd_1: 1
       timetagger_channel_detect: 2
       timetagger_channel_sequence: 3
       timetagger_sum_channels: True


    awg:
        module.Class: 'awg.tektronix_awg5014c.AWG5014C'
        awg_visa_address: 'TCPIP0::AWG-3289382193::inst0::INSTR'
        awg_IP_address: '10.0.0.1'
        awg_port: 3000
        pulsed_file_dir: 'C:\\Software\\pulsed_files'
        ftp_root_dir: 'C:\\inetpub\\ftproot'
        timeout: 10
        default_sample_rate: 1.2e9

    nicard:
        module.Class: 'ni_card.NICard'
        clock_channel: '/Dev1/Ctr0'
        counter_channel: '/Dev1/Ctr1'
        scanner_clock_channel: '/Dev1/Ctr2'
        scanner_counter_channel: '/Dev1/Ctr3'
        photon_source: '/Dev1/PFI8'
        gate_in_channel: '/Dev1/PFI9'
        odmr_trigger_channel: '/Dev1/PFI15'
        counting_edge_rising: True
        scanner_ao_channels: '/Dev1/AO0:3'
        scanner_x_ao: '/Dev1/AO0'
        scanner_y_ao: '/Dev1/AO1'
        scanner_z_ao: '/Dev1/AO2'
        clock_frequency: 100               # in Hz
        scanner_clock_frequency: 100       # in Hz
        x_range:                           # in micrometer
        - 0e-6
        - 200e-6
        y_range:                           # in micrometer
        - 0e-6
        - 200e-6
        z_range:                           # in micrometer
        - 0e-6
        - 25e-6
        voltage_range:                     # in volts
        - -10
        - 10
        samples_number: 10                 # for gated counting



logic:
    kernellogic:
        module.Class: 'jupyterkernel.kernellogic.QudiKernelLogic'
        remoteaccess: True

    pulsedmaster:
        module.Class: 'pulsed_master_logic.PulsedMasterLogic'
        direct_write: False
        connect:
            pulsedmeasurementlogic: 'pulsedmeasurement'
            sequencegeneratorlogic: 'sequencegenerator'

    sequencegenerator:
        module.Class: 'sequence_generator_logic.SequenceGeneratorLogic'
        pulsed_file_dir: 'C:\\Software\\pulsed_files'
        overhead_bytes: 1e9

    pulseextraction:
        module.Class: 'pulse_extraction_logic.PulseExtractionLogic'

    pulseanalysis:
        module.Class: 'pulse_analysis_logic.PulseAnalysisLogic'


    pulsedmeasurement:
        module.Class: 'pulsed_measurement_logic.PulsedMeasurementLogic'
        connect:
            fastcounter: 'fastcounter'
            pulseanalysislogic: 'pulseanalysis'
            pulseextractionlogic: 'pulseextraction'
            fitlogic: 'fit'
            microwave: 'microwave'
            #microwave: 'awg'
            savelogic: 'save'
            pulsegenerator: 'awg'

    counter:
        module.Class: 'counter_logic.CounterLogic'
        connect:
            counter1: 'nicard'
            savelogic: 'save'

    scanner:
        module.Class: 'confocal_logic.ConfocalLogic'
        connect:
            confocalscanner1: 'scanner_tilt_interfuse'
            savelogic: 'save'

    optimizer:
        module.Class: 'optimizer_logic.OptimizerLogic'
        connect:
            confocalscanner1: 'scanner_tilt_interfuse'
            fitlogic: 'fit'

    scanner_tilt_interfuse:
        module.Class: 'interfuse.scanner_tilt_interfuse.ScannerTiltInterfuse'
        connect:
            confocalscanner1: 'nicard'

    poimanager:
        module.Class: 'poi_manager_logic.PoiManagerLogic'
        connect:
            scannerlogic: 'scanner'
            optimizer1: 'optimizer'
            savelogic: 'save'

    odmr:
        module.Class: 'odmr_logic.ODMRLogic'
        scanmode: 'list'
        connect:
            odmrcounter: 'nicard'
            fitlogic: 'fit'
            #microwave1: 'microwave'
            microwave1: 'microwave'
            #microwave1: 'awg'
            savelogic: 'save'
            taskrunner: 'tasklogic'

    fit:
        module.Class: 'fit_logic.FitLogic'

    save:
        module.Class: 'save_logic.SaveLogic'
        win_data_directory: 'D:/Data'
        unix_data_directory: '/$HOME/'

    tasklogic:
        module.Class: 'taskrunner.TaskRunner'

gui:
    tray:
        module.Class: 'trayicon.TrayIcon'
    man:
        module.Class: 'manager.managergui.ManagerGui'

    countergui:
        module.Class: 'counter.countergui.CounterGui'
        connect:
            counterlogic1: 'counter'

    confocalgui:
        module.Class: 'confocal.confocalgui.ConfocalGui'
        connect:
            confocallogic1: 'scanner'
            savelogic: 'save'
            optimizerlogic1: 'optimizer'
        fixed_aspect_ratio_xy: True
        fixed_aspect_ratio_depth: True
        slider_stepsize: 0.001  # in micrometer
        image_x_padding: 0.02
        image_y_padding: 0.02
        image_z_padding: 0.02

    poimanagergui:
        module.Class: 'poimanager.poimangui.PoiManagerGui'
        connect:
            poimanagerlogic1: 'poimanager'
            confocallogic1: 'scanner'

    odmrgui:
        module.Class: 'odmr.odmrgui.ODMRGui'
        connect:
            odmrlogic1: 'odmr'
            savelogic: 'save'

    pulsedmeasurementgui:
        module.Class: 'pulsed.pulsed_maingui.PulsedMeasurementGui'
        connect:
            pulsedmasterlogic: 'pulsedmaster'
            savelogic: 'save'

